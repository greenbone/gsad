name: Build and test C

on:
  push:
    branches: [ master, gsa-21.10, gsa-21.04, gsa-20.08 ]
  pull_request:
    branches: [ master, gsa-21.10, gsa-21.04, gsa-20.08 ]


jobs:
  c_format_check:
    env:
      WORKSPACE: ${{ github.workspace }}/gsad
    name: Check C Source Code Formatting
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Check Source Format
        run: |
          clang-format -i -style=file ${{ env.WORKSPACE }}/src/*.{c,h} \
          && git diff --exit-code
  build_gsad:
    name: Build gsad
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        build_type:
          - Debug
          - Release
    container: greenbone/build-env-gsa-20.08-debian-buster-gcc-gsad
    env:
      WORKSPACE: ${{ github.workspace }}/gsad
      BUILD_TYPE: ${{ matrix.build_type }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Configure and compile gsad
        run: |
          mkdir build && rm -rf .git && cd build/ \
            && cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE .. && make install
        working-directory: ${{ env.WORKSPACE }}
  build_full:
     name: Build gsa and gsad from root dir
     runs-on: 'ubuntu-latest'
     strategy:
       matrix:
         build_type:
           - Debug
           - Release
     container: greenbone/build-env-gsa-20.08-debian-buster-gcc-gsa-full
     env:
       BUILD_TYPE: ${{ matrix.build_type }}
     steps:
       - uses: actions/checkout@v2.3.4
       - name: Configure and compile
         run: |
           mkdir build && rm -rf .git && cd build/ \
             && cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE .. && make install
         working-directory: ${{ github.WORKSPACE }}
